#BlueJ class context
comment0.target=UMCarroJa
comment1.params=
comment1.target=UMCarroJa()
comment1.text=Construtor\ vazio\ que\ cria\ uma\ inst\u00E2ncia\ UMCarroJa\ *
comment10.params=
comment10.target=UMCarroJa\ clone()
comment11.params=o
comment11.target=boolean\ equals(java.lang.Object)
comment12.params=nif\ email
comment12.target=USER\ validateAcess(int,\ java.lang.String)
comment13.params=name\ nif\ email\ address\ x\ y
comment13.target=Client\ registerNewClient(java.lang.String,\ int,\ java.lang.String,\ java.lang.String,\ double,\ double)
comment13.text=CLIENTES\ **
comment14.params=c
comment14.target=void\ addCL(Client)
comment15.params=c
comment15.target=void\ deleteCL(Client)
comment16.params=
comment16.target=java.util.List\ top10clientsX()
comment17.params=
comment17.target=java.util.List\ top10clientsKM()
comment18.params=nif
comment18.target=Owner\ getOwnerByNif(int)
comment18.text=Propriet\u00E1rios\ **
comment19.params=name\ email\ address\ nif
comment19.target=Owner\ registerNewOwner(java.lang.String,\ java.lang.String,\ java.lang.String,\ int)
comment2.params=u
comment2.target=UMCarroJa(UMCarroJa)
comment2.text=Construtor\ que\ cria\ uma\ nova\ inst\u00E2ncia\ UMCarroJa\ a\ partir\ de\ um\ UMCarroJa\ passado\ como\ par\u00E2metro\ *
comment20.params=o
comment20.target=void\ addOW(Owner)
comment21.params=o
comment21.target=void\ deleteOW(Owner)
comment22.params=nif
comment22.target=java.util.List\ listOfVehicles(int)
comment23.params=c\ v
comment23.target=boolean\ acceptORreject(Client,\ Vehicle)
comment23.text=\r\n\ M\u00E9todo\ que\ permite\ o\ propriet\u00E1rio\ aceitar\ ou\ recusar\ um\ aluguer\ \r\n\ @param\ Cliente\ que\ requisitou\ o\ aluguer\r\n\ @param\ Ve\u00EDculo\ a\ alugar\r\n
comment24.params=nif\ v
comment24.target=void\ addVehicleToOwner(int,\ Vehicle)
comment24.text=Vehicles\ **
comment25.params=nif
comment25.target=boolean\ vehicleExists(int)
comment26.params=type\ brand\ plate\ nif\ speed\ price\ comsuption\ autonomy\ x\ y
comment26.target=Vehicle\ vType(java.lang.String,\ java.lang.String,\ java.lang.String,\ int,\ double,\ double,\ double,\ double,\ double,\ double)
comment27.params=type\ brand\ plate\ nif\ speed\ price\ comsuption\ autonomy\ x\ y
comment27.target=Vehicle\ gasRegistration(java.lang.String,\ java.lang.String,\ java.lang.String,\ int,\ double,\ double,\ double,\ double,\ double,\ double)
comment28.params=type\ brand\ plate\ nif\ speed\ price\ comsuption\ autonomy\ x\ y
comment28.target=Vehicle\ electricRegistration(java.lang.String,\ java.lang.String,\ java.lang.String,\ int,\ double,\ double,\ double,\ double,\ double,\ double)
comment29.params=type\ brand\ plate\ nif\ speed\ price\ comsuption\ autonomy\ x\ y
comment29.target=Vehicle\ hybridRegistration(java.lang.String,\ java.lang.String,\ java.lang.String,\ int,\ double,\ double,\ double,\ double,\ double,\ double)
comment3.params=
comment3.target=java.util.Map\ getVehicles()
comment3.text=M\u00E9todo\ que\ devolve\ os\ veiculos\ inscritos\ na\ aplica\u00E7\u00E3o\ *
comment30.params=clLocation
comment30.target=Vehicle\ nearestVehicle(Point2D)
comment31.params=plate
comment31.target=Vehicle\ specificVehicle(java.lang.String)
comment32.params=
comment32.target=Vehicle\ cheapestVehicle()
comment33.params=walk\ localc
comment33.target=Vehicle\ cheapestWalkVehicle(double,\ Point2D)
comment34.params=autonomy
comment34.target=Vehicle\ desiredAutonomyVehicle(double)
comment35.params=x\ y\ w\ z\ v
comment35.target=double\ estimatedTime(double,\ double,\ double,\ double,\ Vehicle)
comment36.params=estimatedTime\ v
comment36.target=double\ realTime(double,\ Vehicle)
comment37.params=x\ y\ w\ z\ v
comment37.target=double\ estimatedPrice(double,\ double,\ double,\ double,\ Vehicle)
comment38.params=estimatedTime\ realTime\ estimatedPrice
comment38.target=double\ realPrice(double,\ double,\ double)
comment39.params=
comment39.target=double\ chanceofrain()
comment4.params=vh
comment4.target=void\ setVehicles(java.util.Map)
comment4.text=M\u00E9todo\ que\ define\ um\ hashMap\ a\ partir\ de\ um\ hashMap\ passado\ como\ par\u00E2metro\ *
comment40.params=
comment40.target=double\ chanceoffog()
comment41.params=
comment41.target=double\ chanceoftraffic()
comment42.params=plate\ yi\ mi\ di\ yf\ mf\ df
comment42.target=double\ carProfit(java.lang.String,\ int,\ int,\ int,\ int,\ int,\ int)
comment43.params=nif\ yi\ mi\ di\ yf\ mf\ df
comment43.target=java.util.List\ rentingRegist(int,\ int,\ int,\ int,\ int,\ int,\ int)
comment43.text=VIAGEM/ALUGUER\ **
comment44.params=c\ yr\ m\ d\ h\ min\ x\ y\ w\ z\ v\ kms\ timeRide\ custoReal\ custoEst\ a\ classificacao
comment44.target=void\ endRide(Client,\ int,\ int,\ int,\ int,\ int,\ double,\ double,\ double,\ double,\ Vehicle,\ double,\ double,\ double,\ double,\ double,\ int)
comment45.params=fileName
comment45.target=void\ writeToTxt(java.lang.String)
comment45.text=STATUS\ **
comment46.params=fileName
comment46.target=void\ saveStatus(java.lang.String)
comment47.params=fileName
comment47.target=UMCarroJa\ loadStatus(java.lang.String)
comment48.params=
comment48.target=void\ main()
comment5.params=
comment5.target=java.util.Map\ getClients()
comment6.params=cl
comment6.target=void\ setClients(java.util.Map)
comment7.params=
comment7.target=java.util.Map\ getOwners()
comment8.params=ow
comment8.target=void\ setOwners(java.util.Map)
comment9.params=
comment9.target=java.lang.String\ toString()
numComments=49
