#BlueJ class context
comment0.target=UMCarroJa
comment1.params=
comment1.target=UMCarroJa()
comment1.text=\ \r\n\ Construtor\ vazio\ que\ cria\ uma\ inst\u00E2ncia\ UMCarroJa\ \r\n
comment10.params=
comment10.target=UMCarroJa\ clone()
comment10.text=\ \r\n\ M\u00E9todo\ que\ cria\ uma\ c\u00F3pia\ de\ uma\ identifica\u00E7\u00E3o\ de\ um\ UMCarroJa\ \r\n
comment11.params=o
comment11.target=boolean\ equals(java.lang.Object)
comment11.text=\ \r\n\ M\u00E9todo\ que\ testa\ se\ um\ objeto\ \u00E9\ igual\ a\ uma\ determinada\ identifica\u00E7\u00E3o\r\n\ @param\ \ \ \ \ \ Objeto\ a\ ser\ testado\r\n\ @return\ \ \ \ \ True\ se\ o\ objeto\ for\ igual\ \u00E0\ identifica\u00E7\u00E3o,\ false\ se\ o\ objeto\ passado\ n\u00E3o\ for\ igual\ \u00E0\ identifica\u00E7\u00E3o\r\n
comment12.params=nif\ email
comment12.target=USER\ validateAcess(int,\ java.lang.String)
comment12.text=\r\n\ M\u00E9todo\ que\ valida\ o\ acesso\ de\ um\ utilizador\ na\ aplica\u00E7\u00E3o\ atrav\u00E9s\ do\ seu\ email\ e\ password\r\n\ @param\ \ \ \ \ Nif\ do\ utilizador\r\n\ @param\ \ \ \ \ Email\ do\ utilizador\r\n\ @return\ \ \ \ Utilizador\ inscrito\ na\ aplica\u00E7\u00E3o\r\n
comment13.params=name\ nif\ email\ address\ x\ y
comment13.target=Client\ registerNewClient(java.lang.String,\ int,\ java.lang.String,\ java.lang.String,\ double,\ double)
comment13.text=\r\n\ M\u00E9todo\ que\ regista\ um\ novo\ cliente\ na\ aplica\u00E7\u00E3o\r\n\ @param\ \ \ \ Nome\ do\ utilizador\r\n\ @param\ \ \ \ Nif\ do\ utilizador\r\n\ @param\ \ \ \ Email\ do\ utilizador\r\n\ @param\ \ \ \ Morada\ do\ utilizador\r\n\ @param\ \ \ \ Coordenadas\ X\ e\ Y\ da\ localiza\u00E7\u00E3o\ do\ utilizador\r\n\ @return\ \ \ Novo\ utilizador\ registado\ na\ aplica\u00E7\u00E3o\r\n
comment14.params=c
comment14.target=void\ addCL(Client)
comment14.text=\r\n\ M\u00E9todo\ que\ adiciona\ um\ novo\ cliente\ na\ aplica\u00E7\u00E3o\r\n\ @param\ \ \ \ Cliente\ a\ adicionar\ \r\n
comment15.params=c
comment15.target=void\ deleteCL(Client)
comment15.text=\r\n\ M\u00E9todo\ que\ remvoe\ um\ cliente\ na\ aplica\u00E7\u00E3o\r\n\ @param\ \ \ \ Cliente\ a\ remover\r\n
comment16.params=
comment16.target=java.util.List\ top10clientsX()
comment16.text=\r\n\ M\u00E9todo\ que\ retorna\ uma\ lista\ com\ os\ 10\ clientes\ que\ mais\ utilizam\ o\ sistema\ (em\ vezes)\r\n\ @return\ \ \ \ Lista\ dos\ 10\ Clientes\ que\ mais\ utilizam\ o\ sistema\ (em\ vezes)\r\n
comment17.params=
comment17.target=java.util.List\ top10clientsKM()
comment17.text=\r\n\ M\u00E9todo\ que\ retorna\ uma\ lista\ com\ os\ 10\ clientes\ que\ mais\ utilizam\ o\ sistema\ (em\ km)\r\n\ @return\ \ \ \ \ \ Lista\ dos\ 10\ Clientes\ que\ mais\ utilizam\ o\ sistema\ (em\ km)\r\n
comment18.params=nif
comment18.target=Owner\ getOwnerByNif(int)
comment18.text=\r\n\ M\u00E9todo\ que\ devolve\ um\ propriet\u00E1rio\ que\ corresponde\ ao\ nif\ passado\ como\ parametro\r\n\ @param\ \ \ \ \ \ \ Nif\ do\ utilizador\r\n\ @return\ \ \ \ \ \ Utilizador\ registado\ na\ aplica\u00E7\u00E3o\r\n
comment19.params=name\ nif\ email\ address
comment19.target=void\ registerNewOwner(java.lang.String,\ int,\ java.lang.String,\ java.lang.String)
comment19.text=\r\n\ M\u00E9todo\ que\ regista\ um\ novo\ cliente\ na\ aplica\u00E7\u00E3o\r\n\ @param\ \ \ \ \ Nome\ do\ utilizador\r\n\ @param\ \ \ \ \ Nif\ do\ utilizador\r\n\ @param\ \ \ \ \ Email\ do\ utilizador\r\n\ @param\ \ \ \ \ Morada\ do\ utilizador\r\n\ @return\ \ \ \ Novo\ utilizador\ registado\ na\ aplica\u00E7\u00E3o\r\n
comment2.params=u
comment2.target=UMCarroJa(UMCarroJa)
comment2.text=\ \r\n\ Construtor\ que\ cria\ uma\ nova\ inst\u00E2ncia\ UMCarroJa\ a\ partir\ de\ um\ UMCarroJa\ passado\ como\ par\u00E2metro\ \r\n
comment20.params=o
comment20.target=void\ addOW(Owner)
comment20.text=\r\n\ M\u00E9todo\ que\ \ adiciona\ um\ novo\ propriet\u00E1rio\ na\ aplica\u00E7\u00E3o\r\n\ @param\ \ \ \ \ Utilizador\ a\ adicionar\r\n
comment21.params=o
comment21.target=void\ deleteOW(Owner)
comment21.text=\r\n\ M\u00E9todo\ que\ remove\ o\ perfil\ de\ um\ propriet\u00E1rio\ da\ aplica\u00E7\u00E3o\r\n\ @param\ \ \ \ \ Utilizador\ a\ remover\r\n
comment22.params=nif
comment22.target=java.util.List\ listOfVehicles(int)
comment22.text=\r\n\ M\u00E9todo\ que\ retorna\ uma\ lista\ com\ todos\ os\ ve\u00EDculos\ de\ um\ determinado\ proprietario\r\n\ @param\ Nif\ do\ propriet\u00E1rio\r\n\ @return\ \ \ \ Lista\ de\ ve\u00EDculos\ de\ um\ determinado\ propriet\u00E1rio\r\n
comment23.params=c\ v
comment23.target=boolean\ acceptORreject(Client,\ Vehicle)
comment23.text=\r\n\ M\u00E9todo\ que\ permite\ o\ propriet\u00E1rio\ aceitar\ ou\ recusar\ um\ aluguer\ \r\n\ @param\ \ \ \ Cliente\ que\ requisitou\ o\ aluguer\r\n\ @param\ \ \ \ Ve\u00EDculo\ a\ alugar\r\n
comment24.params=nif\ v
comment24.target=void\ addVehicleToOwner(int,\ Vehicle)
comment24.text=\r\n\ M\u00E9todo\ que\ permite\ associar\ um\ ve\u00EDculo\ ao\ seu\ propriet\u00E1rio\r\n\ @param\ \ \ \ Nif\ do\ propriet\u00E1rio\r\n\ @param\ \ \ \ Ve\u00EDculo\ a\ adicionar\r\n
comment25.params=plate
comment25.target=boolean\ vehicleExists(java.lang.String)
comment25.text=\r\n\ M\u00E9todo\ que\ verifica\ se\ um\ ve\u00EDculo\ j\u00E1\ existe\ a\ partir\ da\ sua\ matr\u00EDcula\r\n\ @param\ \ \ \ \ Matr\u00EDcula\ do\ veiculo\r\n\ @return\ \ \ \ True\ caso\ o\ ve\u00EDculo\ exista,\ false\ caso\ contr\u00E1rio\r\n
comment26.params=type\ brand\ plate\ nif\ speed\ price\ comsuption\ autonomy\ x\ y
comment26.target=Vehicle\ vType(java.lang.String,\ java.lang.String,\ java.lang.String,\ int,\ double,\ double,\ double,\ double,\ double,\ double)
comment26.text=\r\n\ M\u00E9todo\ que\ verifica\ o\ tipo\ de\ ve\u00EDculo\ que\ se\ pretende\ criar\ e\ que\ cria\ o\ ve\u00EDculo\ em\ quest\u00E3o\ a\ partir\ de\ fun\u00E7\u00F5es\ auxiliares\r\n\ @param\ \ \ \ Tipo\ do\ veiculo\r\n\ @param\ \ \ \ Marca\ do\ veiculo\r\n\ @param\ \ \ \ Matricula\ do\ veiculo\r\n\ @param\ \ \ \ Nif\ do\ veiculo\r\n\ @param\ \ \ \ Velocidade\ m\u00E9dia\ do\ veiculo\r\n\ @param\ \ \ \ Velocidade\ do\ veiculo\r\n\ @param\ \ \ \ Consumo\ do\ veiculo\r\n\ @param\ \ \ \ Autonomia\ do\ veiculo\r\n\ @param\ \ \ \ Coordenadas\ X\ e\ Y\ da\ localiza\u00E7\u00E3o\ do\ veiculo\r\n\ @return\ \ \ Novo\ ve\u00EDculo\r\n
comment27.params=type\ brand\ plate\ nif\ speed\ price\ comsuption\ autonomy\ x\ y
comment27.target=Vehicle\ gasRegistration(java.lang.String,\ java.lang.String,\ java.lang.String,\ int,\ double,\ double,\ double,\ double,\ double,\ double)
comment27.text=\r\n\ M\u00E9todo\ que\ cria\ um\ novo\ carro\ a\ gasolina\r\n\ @param\ \ \ \ Tipo\ do\ veiculo\r\n\ @param\ \ \ \ Marca\ do\ veiculo\r\n\ @param\ \ \ \ Matricula\ do\ veiculo\r\n\ @param\ \ \ \ Nif\ do\ veiculo\r\n\ @param\ \ \ \ Velocidade\ m\u00E9dia\ do\ veiculo\r\n\ @param\ \ \ \ Velocidade\ do\ veiculo\r\n\ @param\ \ \ \ Consumo\ do\ veiculo\r\n\ @param\ \ \ \ Autonomia\ do\ veiculo\r\n\ @param\ \ \ \ Coordenadas\ X\ e\ Y\ da\ localiza\u00E7\u00E3o\ do\ veiculo\r\n\ @return\ \ \ Novo\ ve\u00EDculo\ a\ gasolina\r\n
comment28.params=type\ brand\ plate\ nif\ speed\ price\ comsuption\ autonomy\ x\ y
comment28.target=Vehicle\ electricRegistration(java.lang.String,\ java.lang.String,\ java.lang.String,\ int,\ double,\ double,\ double,\ double,\ double,\ double)
comment28.text=\r\n\ M\u00E9todo\ que\ cria\ um\ novo\ carro\ a\ gasolina\r\n\ @param\ \ \ \ Tipo\ do\ veiculo\r\n\ @param\ \ \ \ Marca\ do\ veiculo\r\n\ @param\ \ \ \ Matricula\ do\ veiculo\r\n\ @param\ \ \ \ Nif\ do\ veiculo\r\n\ @param\ \ \ \ Velocidade\ m\u00E9dia\ do\ veiculo\r\n\ @param\ \ \ \ Velocidade\ do\ veiculo\r\n\ @param\ \ \ \ Consumo\ do\ veiculo\r\n\ @param\ \ \ \ Autonomia\ do\ veiculo\r\n\ @param\ \ \ \ Coordenadas\ X\ e\ Y\ da\ localiza\u00E7\u00E3o\ do\ veiculo\r\n\ @return\ \ \ Novo\ ve\u00EDculo\ \ eletrico\r\n
comment29.params=type\ brand\ plate\ nif\ speed\ price\ comsuption\ autonomy\ x\ y
comment29.target=Vehicle\ hybridRegistration(java.lang.String,\ java.lang.String,\ java.lang.String,\ int,\ double,\ double,\ double,\ double,\ double,\ double)
comment29.text=\r\n\ M\u00E9todo\ que\ cria\ um\ novo\ carro\ a\ gasolina\r\n\ @param\ \ \ Tipo\ do\ veiculo\r\n\ @param\ \ \ Marca\ do\ veiculo\r\n\ @param\ \ \ Matricula\ do\ veiculo\r\n\ @param\ \ \ Nif\ do\ veiculo\r\n\ @param\ \ \ Velocidade\ m\u00E9dia\ do\ veiculo\r\n\ @param\ \ \ Velocidade\ do\ veiculo\r\n\ @param\ \ \ Consumo\ do\ veiculo\r\n\ @param\ \ \ Autonomia\ do\ veiculo\r\n\ @param\ \ \ Coordenadas\ X\ e\ Y\ da\ localiza\u00E7\u00E3o\ do\ veiculo\r\n\ @return\ \ Novo\ ve\u00EDculo\ hibrido\r\n
comment3.params=
comment3.target=java.util.Map\ getVehicles()
comment3.text=\ \r\n\ M\u00E9todo\ que\ devolve\ os\ veiculos\ inscritos\ na\ aplica\u00E7\u00E3o\ \r\n\ @returns\ \ \ HashMap\ dos\ ve\u00EDculos\ inscritos\ na\ aplica\u00E7\u00E3o\r\n
comment30.params=clLocation\ kms
comment30.target=Vehicle\ nearestVehicle(Point2D,\ double)
comment30.text=\r\n\ M\u00E9todo\ que\ retorna\ o\ ve\u00EDculo\ mais\ pr\u00F3ximo\ da\ localiza\u00E7\u00E3o\ de\ um\ determinado\ cliente\r\n\ @param\ \ \ Point\ 2D\ da\ localiza\u00E7\u00E3o\ do\ Cliente\r\n\ @param\ \ \ Quil\u00F3metros\ a\ percorrer\r\n\ @return\ \ Ve\u00EDculo\ mais\ proximo\ do\ cliente\r\n
comment31.params=plate\ kms
comment31.target=Vehicle\ specificVehicle(java.lang.String,\ double)
comment31.text=\r\n\ M\u00E9todo\ que\ retorna\ um\ ve\u00EDculo\ especifico\ requisitado\ por\ um\ determinado\ cliente\r\n\ @param\ \ \ Matricula\ do\ veiculo\r\n\ @param\ \ \ Quil\u00F3metros\ a\ percorrer\r\n\ @return\ \ Ve\u00EDculo\ escolhido\r\n
comment32.params=kms
comment32.target=Vehicle\ cheapestVehicle(double)
comment32.text=\r\n\ M\u00E9todo\ que\ retorna\ um\ ve\u00EDculo\ mais\ barato\r\n\ @return\ \ \ Ve\u00EDculo\ mais\ barato\ da\ aplica\u00E7\u00E3o\r\n
comment33.params=walk\ localc\ kms
comment33.target=Vehicle\ cheapestWalkVehicle(double,\ Point2D,\ double)
comment33.text=\r\n\ M\u00E9todo\ que\ retorna\ um\ ve\u00EDculo\ mais\ barato\ dentro\ de\ uma\ distania\ que\ o\ cliente\ est\u00E1\ disposto\ a\ caminhar\r\n\ @param\ \ \ km\ que\ o\ cliente\ est\u00E1\ disposto\ a\ caminhar\r\n\ @param\ \ \ Localiza\u00E7\u00E3o\ do\ cliente\r\n\ @return\ \ Ve\u00EDculo\ escolhido\r\n
comment34.params=autonomy
comment34.target=Vehicle\ desiredAutonomyVehicle(double)
comment34.text=\r\n\ M\u00E9todo\ que\ retorna\ um\ ve\u00EDculo\ com\ a\ autonomia\ desejada\r\n\ @param\ \ \ Autonomia\ desejada\r\n\ @return\ \ Ve\u00EDculo\ com\ a\ autonomia\ desejada\r\n
comment35.params=x\ y\ w\ z\ v
comment35.target=double\ estimatedTime(double,\ double,\ double,\ double,\ Vehicle)
comment35.text=\r\n\ M\u00E9todo\ que\ determina\ o\ tempo\ estimado\ de\ uma\ viagem\r\n\ @param\ \ \ Localiza\u00E7\u00E3o\ X\ e\ Y\ do\ ponto\ inicial\ da\ viagem\r\n\ @param\ \ \ Localiza\u00E7\u00E3o\ X\ e\ Y\ do\ destino\ da\ viagem\r\n\ @param\ \ \ Ve\u00EDculo\ alugado\ para\ a\ viagem\r\n\ @return\ \ Tempo\ estimado\r\n
comment36.params=estimatedTime\ v
comment36.target=double\ realTime(double,\ Vehicle)
comment36.text=\r\n\ M\u00E9todo\ que\ determina\ o\ tempo\ real\ de\ uma\ viagem\r\n\ @param\ \ \ Localiza\u00E7\u00E3o\ X\ e\ Y\ do\ ponto\ inicial\ da\ viagem\r\n\ @param\ \ \ Localiza\u00E7\u00E3o\ X\ e\ Y\ do\ destino\ da\ viagem\r\n\ @param\ \ \ Ve\u00EDculo\ alugado\ para\ a\ viagem\r\n\ @return\ \ Tempo\ real\r\n
comment37.params=x\ y\ w\ z\ v
comment37.target=double\ estimatedPrice(double,\ double,\ double,\ double,\ Vehicle)
comment37.text=\r\n\ M\u00E9todo\ que\ determina\ o\ custo\ estimado\ de\ uma\ viagem\r\n\ @param\ \ \ Localiza\u00E7\u00E3o\ X\ e\ Y\ do\ ponto\ inicial\ da\ viagem\r\n\ @param\ \ \ Localiza\u00E7\u00E3o\ X\ e\ Y\ do\ destino\ da\ viagem\r\n\ @param\ \ \ Ve\u00EDculo\ alugado\ para\ a\ viagem\r\n\ @return\ \ Custo\ estimado\r\n
comment38.params=estimatedTime\ realTime\ estimatedPrice
comment38.target=double\ realPrice(double,\ double,\ double)
comment38.text=\r\n\ M\u00E9todo\ que\ determina\ o\ custo\ real\ de\ uma\ viagem\r\n\ @param\ \ \ Localiza\u00E7\u00E3o\ X\ e\ Y\ do\ ponto\ inicial\ da\ viagem\r\n\ @param\ \ \ Localiza\u00E7\u00E3o\ X\ e\ Y\ do\ destino\ da\ viagem\r\n\ @param\ \ \ Ve\u00EDculo\ alugado\ para\ a\ viagem\r\n\ @return\ \ Custo\ real\r\n
comment39.params=
comment39.target=double\ chanceofrain()
comment39.text=\r\n\ M\u00E9todo\ que\ gera\ um\ random\ de\ 0\ a\ 100\ correspondente\ \u00E0\ probabilidade\ de\ chover\r\n\ @return\ \ \ \ A\ probabilidade\ de\ chover\r\n
comment4.params=vh
comment4.target=void\ setVehicles(java.util.Map)
comment4.text=\ \r\n\ M\u00E9todo\ que\ define\ um\ hashMap\ a\ partir\ de\ um\ hashMap\ passado\ como\ par\u00E2metro\ \r\n\ @param\ \ \ \ HashMap\ dos\ ve\u00EDculos\ inscritos\ na\ aplica\u00E7\u00E3o\r\n
comment40.params=
comment40.target=double\ chanceoffog()
comment40.text=\r\n\ M\u00E9todo\ que\ gera\ um\ random\ de\ 0\ a\ 100\ correspondente\ \u00E0\ probabilidade\ de\ estar\ nevoeiro\r\n\ @return\ \ \ \ A\ probabilidade\ de\ estar\ nevoeiro\r\n
comment41.params=
comment41.target=double\ chanceoftraffic()
comment41.text=\r\n\ M\u00E9todo\ que\ gera\ um\ random\ de\ 0\ a\ 100\ correspondente\ \u00E0\ probabilidade\ de\ estar\ transito\r\n\ @return\ \ \ \ A\ probabilidade\ de\ estar\ transito\r\n
comment42.params=nif\ plate\ yi\ mi\ di\ yf\ mf\ df
comment42.target=double\ carProfit(int,\ java.lang.String,\ int,\ int,\ int,\ int,\ int,\ int)
comment42.text=\r\n\ M\u00E9todo\ que\ retorna\ o\ total\ faturado\ por\ um\ veiculo\ num\ determinado\ per\u00EDodo\r\n\ @param\ \ \ \ \ Matr\u00EDcula\ do\ ve\u00EDculo\ \r\n\ @param\ \ \ \ \ Ano\ inicial\ considerado\r\n\ @param\ \ \ \ \ M\u00EAs\ inicial\ considerado\r\n\ @param\ \ \ \ \ Dia\ inicial\ considerado\r\n\ @param\ \ \ \ \ Ano\ final\ considerado\r\n\ @param\ \ \ \ \ M\u00EAs\ final\ considerado\r\n\ @param\ \ \ \ \ Dia\ final\ considerado\r\n\ @return\ \ \ \ O\ total\ faturado\r\n
comment43.params=nif\ yi\ mi\ di\ yf\ mf\ df
comment43.target=java.util.List\ rentingRegist(int,\ int,\ int,\ int,\ int,\ int,\ int)
comment43.text=\r\n\ M\u00E9todo\ que\ retorna\ o\ registo\ de\ viagens\ de\ um\ utilizador\ num\ determinado\ per\u00EDodo\r\n\ @param\ \ \ \ \ Nif\ do\ utilizador\ \r\n\ @param\ \ \ \ \ Ano\ inicial\ considerado\r\n\ @param\ \ \ \ \ M\u00EAs\ inicial\ considerado\r\n\ @param\ \ \ \ \ Dia\ inicial\ considerado\r\n\ @param\ \ \ \ \ Ano\ final\ considerado\r\n\ @param\ \ \ \ \ M\u00EAs\ final\ considerado\r\n\ @param\ \ \ \ \ Dia\ final\ considerado\r\n\ @return\ \ \ \ Lista\ de\ viagens\ efetuadas\r\n
comment44.params=c\ yr\ m\ d\ h\ min\ x\ y\ w\ z\ v\ kms\ timeRide\ custoReal\ custoEst\ a\ classificacao
comment44.target=void\ endRide(Client,\ int,\ int,\ int,\ int,\ int,\ double,\ double,\ double,\ double,\ Vehicle,\ double,\ double,\ double,\ double,\ double,\ int)
comment44.text=\r\n\ M\u00E9todo\ que\ regista\ a\ viagem\ efetuada\ no\ hist\u00F3rico\ do\ veiculo\ e\ do\ cliente\ \r\n\ @param\ \ \ \ \ Cliente\ que\ efetuou\ o\ aluguer\r\n\ @param\ \ \ \ \ Ano\ inicial\ considerado\r\n\ @param\ \ \ \ \ M\u00EAs\ inicial\ considerado\r\n\ @param\ \ \ \ \ Dia\ inicial\ considerado\r\n\ @param\ \ \ \ \ Ano\ final\ considerado\r\n\ @param\ \ \ \ \ M\u00EAs\ final\ considerado\r\n\ @param\ \ \ \ \ Dia\ final\ considerado\r\n\ @param\ \ \ \ \ Coordenadas\ X\ e\ Y\ da\ lozaliza\u00E7\u00E3o\ inicial\ do\ cliente\r\n\ @param\ \ \ \ \ Coordenadas\ X\ e\ Y\ da\ lozaliza\u00E7\u00E3o\ final\ do\ cliente\r\n\ @param\ \ \ \ \ Ve\u00EDculo\ alugado\r\n\ @param\ \ \ \ \ Kms\ percorridos\ na\ viagem\r\n\ @param\ \ \ \ \ Tempo\ que\ a\ viagem\ demorou\r\n\ @param\ \ \ \ \ Custo\ real\ da\ viagem\r\n\ @param\ \ \ \ \ Custo\ estimado\ da\ viagem\r\n\ @param\ \ \ \ \ Autonomia\ do\ ve\u00EDculo\r\n\ @param\ \ \ \ \ Classifica\u00E7\u00E3o\ do\ aluguer\r\n
comment45.params=plate
comment45.target=Vehicle\ getVehiclebyPlate(java.lang.String)
comment45.text=\r\n\ M\u00E9todo\ que\ devolve\ um\ ve\u00EDculo\ que\ corresponde\ \u00E0\ matricula\ passada\ como\ parametro\r\n\ @param\ \ \ \ \ Matricula\ do\ ve\u00EDculo\r\n\ @return\ \ \ \ Ve\u00EDculo\ registado\ na\ aplica\u00E7\u00E3o\r\n
comment46.params=nif
comment46.target=Vehicle\ getVehiclebyNif(int)
comment46.text=\r\n\ M\u00E9todo\ que\ devolve\ um\ ve\u00EDculo\ que\ corresponde\ ao\ Nif\ passado\ como\ parametro\r\n\ @param\ \ \ \ \ Nif\ do\ ve\u00EDculo\r\n\ @return\ \ \ \ Ve\u00EDculo\ registado\ na\ aplica\u00E7\u00E3o\r\n
comment47.params=nif
comment47.target=Client\ getClientbyNif(int)
comment47.text=\r\n\ M\u00E9todo\ que\ devolve\ o\ email\ de\ um\ cliente\r\n\ @param\ \ \ \ \ Nif\ do\ cliente\ a\ procurar\r\n\ @return\ \ \ \ Email\ do\ cliente\r\n
comment48.params=nif
comment48.target=Point2D\ getLocationbyNif(int)
comment48.text=\r\n\ M\u00E9todo\ que\ devolve\ a\ localiza\u00E7\u00E3o\ de\ um\ cliente\r\n\ @param\ \ \ \ \ \ Nif\ do\ cliente\ a\ procurar\r\n\ @return\ \ \ \ \ Localiza\u00E7\u00E3o\ do\ cliente\r\n
comment49.params=c\ r
comment49.target=void\ setRatingLoad(Client,\ int)
comment5.params=
comment5.target=java.util.Map\ getClients()
comment5.text=\r\n\ M\u00E9todo\ que\ devolve\ os\ clientes\ inscritos\ na\ aplica\u00E7\u00E3o\r\n\ @returns\ \ \ HashMap\ dos\ clientes\ inscritos\ na\ aplica\u00E7\u00E3o\r\n
comment50.params=v\ r
comment50.target=void\ setRatingLoad(Vehicle,\ int)
comment51.params=fileName
comment51.target=void\ writeToTxt(java.lang.String)
comment51.text=\ \r\n\ M\u00E9todo\ que\ guarda\ o\ estado\ de\ uma\ inst\u00E2ncia\ num\ ficheiro\ de\ texto\r\n
comment52.params=fileName
comment52.target=void\ saveStatus(java.lang.String)
comment52.text=\ \r\n\ M\u00E9todo\ que\ guarda\ em\ ficheiro\ de\ objectos\ o\ objecto\ que\ recebe\ a\ mensagem\r\n
comment53.params=fileName
comment53.target=UMCarroJa\ loadStatus(java.lang.String)
comment53.text=\ \r\n\ M\u00E9todo\ que\ recupera\ uma\ inst\u00E2ncia\ de\ UMCarroJa\ de\ um\ ficheiro\ de\ objectos\ \r\n
comment54.params=
comment54.target=void\ main()
comment54.text=\ \r\n\ Corre\ a\ aplica\u00E7\u00E3o,\ gerando\ um\ menu\ interativo\ \r\n
comment6.params=cl
comment6.target=void\ setClients(java.util.Map)
comment6.text=\r\n\ M\u00E9todo\ que\ define\ um\ hashMap\ a\ partir\ de\ um\ hashMap\ passado\ como\ par\u00E2metro\r\n\ *\ @param\ \ \ \ HashMap\ dos\ clientes\ inscritos\ na\ aplica\u00E7\u00E3o\r\n
comment7.params=
comment7.target=java.util.Map\ getOwners()
comment7.text=\r\n\ M\u00E9todo\ que\ devolve\ os\ clientes\ inscritos\ na\ aplica\u00E7\u00E3o\r\n\ @returns\ \ \ HashMap\ dos\ propriet\u00E1rios\ inscritos\ na\ aplica\u00E7\u00E3o\r\n
comment8.params=ow
comment8.target=void\ setOwners(java.util.Map)
comment8.text=\r\n\ M\u00E9todo\ que\ define\ um\ hashMap\ a\ partir\ de\ um\ hashMap\ passado\ como\ par\u00E2metro\r\n\ *\ @param\ \ \ \ HashMap\ dos\ propriet\u00E1rios\ inscritos\ na\ aplica\u00E7\u00E3o\r\n
comment9.params=
comment9.target=java.lang.String\ toString()
comment9.text=\ \r\n\ M\u00E9todo\ que\ devolve\ uma\ representa\u00E7\u00E3o,\ no\ formato\ textual,\ de\ uma\ inst\u00E2ncia\ UMCarroJa\ \r\n
numComments=55
