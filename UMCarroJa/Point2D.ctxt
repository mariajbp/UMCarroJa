#BlueJ class context
comment0.target=Point2D
comment0.text=\n\ Classe\ que\ representa\ um\ ponto,\ pertende\ exprimir\ a\ localiza\u00E7\u00E3o\ das\ entidades\ da\ aplica\u00E7\u00E3o\n
comment1.params=
comment1.target=Point2D()
comment1.text=\n\ Construtor\ vazio\ que\ cria\ o\ ponto\ (0,0)\n
comment10.params=
comment10.target=java.lang.String\ toString()
comment10.text=\ \n\ M\u00E9todo\ que\ converte\ um\ ponto\ numa\ string\n\ @return\ \ Representa\u00E7\u00E3o\ textual\ das\ coordenadas\ do\ ponto\n
comment2.params=x\ y
comment2.target=Point2D(double,\ double)
comment2.text=\n\ Construtor\ que\ cria\ um\ ponto\ a\ partir\ de\ par\u00E2metros\ dados\n\ @param\ Coordenada\ x\ do\ ponto\n\ @param\ Coordenada\ y\ do\ ponto\n
comment3.params=p
comment3.target=Point2D(Point2D)
comment3.text=\n\ Construtor\ que\ cria\ um\ novo\ ponto\ a\ partir\ de\ um\ ponto\ passado\ como\ par\u00E2metro\ \n\ @param\ ponto\ do\ espa\u00E7o\ xOy\n
comment4.params=
comment4.target=double\ getX()
comment4.text=\ \n\ M\u00E9todo\ que\ devolve\ a\ coordenada\ x\ de\ um\ ponto\n\ @return\ \ coordenada\ x\ do\ ponto\n
comment5.params=
comment5.target=double\ getY()
comment5.text=\ \n\ M\u00E9todo\ que\ devolve\ a\ coordenada\ x\ de\ um\ ponto\n\ @return\ \ coordenada\ y\ do\ ponto\n
comment6.params=newX
comment6.target=void\ setX(int)
comment6.text=\ \n\ M\u00E9todo\ que\ define\ a\ coordenada\ x\ de\ um\ ponto\ a\ partir\ de\ um\ double\ recebido\ como\ par\u00E2metro\n\ @return\ \ coordenada\ x\ do\ ponto\n
comment7.params=newY
comment7.target=void\ setY(int)
comment7.text=\ \n\ M\u00E9todo\ que\ define\ a\ coordenada\ y\ de\ um\ ponto\ a\ partir\ de\ um\ double\ recebido\ como\ par\u00E2metro\n\ @return\ \ coordenada\ y\ do\ ponto\n
comment8.params=dest
comment8.target=double\ distanceTo(Point2D)
comment8.text=\ \n\ M\u00E9todo\ que\ determina\ a\ dist\u00E2ncia\ euclidiana\ entre\ dois\ pontos\n\ @param\ \ \ \ ponto\ para\ determinar\ a\ dist\u00E2ncia\n\ @return\ \ \ dist\u00E2ncia\ entre\ os\ pontos\n
comment9.params=
comment9.target=Point2D\ clone()
comment9.text=\ \n\ M\u00E9todo\ que\ cria\ uma\ c\u00F3pia\ de\ um\ ponto\n\ @return\ \ copia\ do\ ponto\n
numComments=11
