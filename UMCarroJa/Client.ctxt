#BlueJ class context
comment0.target=Client
comment0.text=\r\n\ Representa\u00E7\u00E3o\ da\ classe\ cliente,\ subclasse\ de\ USER\r\n
comment1.params=
comment1.target=Client()
comment1.text=\ \r\n\ Construtor\ vazio\ que\ cria\ uma\ inst\u00E2ncia\ Client\ \ \r\n
comment10.params=x
comment10.target=void\ setX(double)
comment10.text=\r\n\ M\u00E9todo\ que\ define\ o\ a\ coordenada\ X\ do\ cliente\r\n\ @param\ Coordenada\ X\ do\ cliente\r\n
comment11.params=y
comment11.target=void\ setY(double)
comment11.text=\r\n\ M\u00E9todo\ que\ define\ o\ a\ coordenada\ Y\ do\ cliente\r\n\ @param\ Coordenada\ Y\ do\ cliente\r\n
comment12.params=p
comment12.target=void\ setLocation(Point2D)
comment12.text=\r\n\ M\u00E9todo\ que\ define\ o\ a\ localiza\u00E7\u00E3o\ do\ cliente\r\n\ @param\ Localiza\u00E7\u00E3o\ do\ cliente\r\n
comment13.params=rc
comment13.target=void\ setRentingHistory(java.util.Set)
comment13.text=\r\n\ M\u00E9todo\ que\ define\ o\ historico\ de\ alugueres\ do\ cliente\r\n\ @param\ Historico\ de\ alugueres\ do\ cliente\r\n
comment14.params=r
comment14.target=void\ addRentedCar(RentedCar)
comment14.text=\r\n\ M\u00E9todo\ que\ adiciona\ um\ aluguer\ ao\ historico\r\n\ @param\ Aluguer\ realizado\ pelo\ cliente\r\n
comment15.params=r
comment15.target=void\ removeRentedCar(RentedCar)
comment15.text=\r\n\ M\u00E9todo\ que\ remove\ um\ aluguer\ ao\ historico\r\n\ @param\ Aluguer\ realizado\ pelo\ cliente\r\n
comment16.params=
comment16.target=Client\ clone()
comment16.text=\ \r\n\ M\u00E9todo\ que\ cria\ uma\ c\u00F3pia\ de\ uma\ identifica\u00E7\u00E3o\ de\ um\ Client\r\n
comment17.params=o
comment17.target=boolean\ equals(java.lang.Object)
comment17.text=\ \r\n\ M\u00E9todo\ que\ testa\ se\ um\ objeto\ \u00E9\ igual\ a\ uma\ determinada\ identifica\u00E7\u00E3o\r\n\ @param\ \ \ \ \ \ Objeto\ a\ ser\ testado\r\n\ @return\ \ \ \ \ True\ se\ o\ objeto\ for\ igual\ \u00E0\ identifica\u00E7\u00E3o,\ false\ se\ o\ objeto\ passado\ n\u00E3o\ for\ igual\ \u00E0\ identifica\u00E7\u00E3o\r\n
comment18.params=
comment18.target=java.lang.String\ toString()
comment18.text=\r\n\ M\u00E9todo\ que\ converte\ uma\ identifica\u00E7\u00E3o\ numa\ string\r\n\ @return\ \ string\ com\ a\ identifica\u00E7\u00E3o\ do\ utilizador\r\n
comment19.params=
comment19.target=double\ totalKms()
comment19.text=\r\n\ M\u00E9todo\ que\ calcula\ o\ total\ de\ km\ percorridos\ pelo\ cliente\r\n\ @return\ Total\ de\ km\ percorridos\ pelo\ cliente\r\n
comment2.params=name\ nif\ email\ address\ x\ y
comment2.target=Client(java.lang.String,\ int,\ java.lang.String,\ java.lang.String,\ double,\ double)
comment2.text=\ \r\n\ Construtor\ que\ cria\ um\ novo\ Client\ a\ partir\ dos\ par\u00E2metros\ dados\ \r\n
comment20.params=newR
comment20.target=void\ clientRating(int)
comment20.text=\r\n\ M\u00E9todo\ que\ calcula\ a\ classifica\u00E7\u00E3o\ de\ um\ cliente\ \r\n
comment3.params=c
comment3.target=Client(Client)
comment3.text=\ \r\n\ Construtor\ de\ c\u00F3pia\ que\ cria\ uma\ nova\ inst\u00E2ncia\ Client\ a\ partir\ de\ um\ Client\ passado\ como\ par\u00E2metro\ \r\n
comment4.params=
comment4.target=double\ getWalk()
comment4.text=\r\n\ M\u00E9todo\ que\ devolve\ o\ numero\ de\ km\ que\ um\ cliente\ est\u00E1\ disposto\ a\ caminhar\r\n\ @return\ Numero\ de\ km\ que\ um\ cliente\ est\u00E1\ disposto\ a\ caminhar\r\n
comment5.params=
comment5.target=double\ getX()
comment5.text=\r\n\ M\u00E9todo\ que\ devolve\ a\ coordernada\ X\ da\ localiza\u00E7\u00E3o\ do\ cliente\r\n\ @return\ Coordernada\ X\ da\ localiza\u00E7\u00E3o\ do\ cliente\r\n
comment6.params=
comment6.target=double\ getY()
comment6.text=\r\n\ M\u00E9todo\ que\ devolve\ a\ coordernada\ Y\ da\ localiza\u00E7\u00E3o\ do\ cliente\r\n\ @return\ Coordernada\ Y\ da\ localiza\u00E7\u00E3o\ do\ cliente\r\n
comment7.params=
comment7.target=Point2D\ getLocation()
comment7.text=\r\n\ M\u00E9todo\ que\ devolve\ a\ localiza\u00E7\u00E3o\ do\ cliente\r\n\ @return\ Localiza\u00E7\u00E3o\ do\ cliente\r\n
comment8.params=
comment8.target=java.util.Set\ getRentingHistoryAll()
comment8.text=\r\n\ M\u00E9todo\ que\ devolve\ o\ historico\ de\ alugueres\ de\ um\ cliente\r\n\ @return\ Historico\ de\ alugueres\ de\ um\ cliente\r\n
comment9.params=w
comment9.target=void\ setWalk(double)
comment9.text=\r\n\ M\u00E9todo\ que\ define\ o\ numero\ de\ km\ que\ um\ cliente\ est\u00E1\ disposto\ a\ caminhar\ a\ partir\ de\ uma\ n\u00FAmero\ passada\ como\ par\u00E2metro\r\n\ @param\ Numero\ de\ km\ que\ um\ cliente\ est\u00E1\ disposto\ a\ caminhar\r\n
numComments=21
