#BlueJ class context
comment0.target=Ride
comment0.text=\r\n\ Representa\u00E7\u00E3o\ das\ carateristicas\ basicas\ de\ uma\ viagem\ num\ carro\ alugado\r\n
comment1.params=
comment1.target=Ride()
comment1.text=\ \r\n\ Construtor\ vazio\ que\ cria\ uma\ inst\u00E2ncia\ Ride\ \ \r\n
comment10.params=
comment10.target=double\ getTime()
comment10.text=\r\n\ M\u00E9todo\ que\ devolve\ o\ tempo\ real\ que\ durou\ da\ viagem\r\n\ @return\ Tempo\ real\ que\ durou\ da\ viagem\r\n
comment11.params=cle
comment11.target=void\ setClEmail(java.lang.String)
comment11.text=\r\n\ M\u00E9todo\ que\ devolve\ o\ email\ de\ um\ cliente\r\n\ @return\ Email\ do\ cliente\r\n
comment12.params=d
comment12.target=void\ setData(java.time.LocalDateTime)
comment12.text=\r\n\ M\u00E9todo\ que\ devolve\ a\ data\ da\ viagem\r\n\ @return\ Data\ da\ viagem\r\n
comment13.params=p
comment13.target=void\ setStart(Point2D)
comment13.text=\r\n\ M\u00E9todo\ que\ define\ a\ localiza\u00E7\u00E3o\ do\ destino\ da\ viagem\r\n\ @return\ Localiza\u00E7\u00E3o\ do\ inicio\ da\ viagem\r\n
comment14.params=d
comment14.target=void\ setDestination(Point2D)
comment14.text=\r\n\ M\u00E9todo\ que\ define\ a\ localiza\u00E7\u00E3o\ do\ destino\ da\ viagem\r\n\ @return\ Localiza\u00E7\u00E3o\ do\ destino\ da\ viagem\r\n
comment15.params=k
comment15.target=void\ setKms(double)
comment15.text=\r\n\ M\u00E9todo\ que\ define\ o\ numero\ de\ kms\ percorridos\ na\ viagem\r\n\ @return\ Numero\ de\ kms\ percorridos\ na\ viagem\r\n
comment16.params=t
comment16.target=void\ setTime(double)
comment16.text=\r\n\ M\u00E9todo\ que\ define\ o\ pre\u00E7o\ real\ da\ viagem\r\n\ @return\ Pre\u00E7o\ real\ da\ viagem\r\n
comment17.params=p
comment17.target=void\ setRealPrice(double)
comment17.text=\r\n\ M\u00E9todo\ que\ define\ o\ tempo\ real\ que\ durou\ da\ viagem\r\n\ @return\ Tempo\ real\ que\ durou\ da\ viagem\r\n
comment18.params=
comment18.target=java.lang.String\ toString()
comment18.text=\r\n\ M\u00E9todo\ que\ converte\ uma\ identifica\u00E7\u00E3o\ numa\ string\r\n\ @return\ \ string\ com\ a\ identifica\u00E7\u00E3o\ do\ utilizador\r\n
comment19.params=
comment19.target=Ride\ clone()
comment19.text=\ \r\n\ M\u00E9todo\ que\ cria\ uma\ c\u00F3pia\ de\ uma\ identifica\u00E7\u00E3o\ de\ um\ USER\r\n
comment2.params=cle\ t\ p\ d\ k\ time\ rp
comment2.target=Ride(java.lang.String,\ java.time.LocalDateTime,\ Point2D,\ Point2D,\ double,\ double,\ double)
comment2.text=\ \r\n\ Construtor\ que\ cria\ uma\ nova\ Ride\ a\ partir\ dos\ par\u00E2metros\ dados\ \r\n
comment20.params=o
comment20.target=boolean\ equals(java.lang.Object)
comment20.text=\ \r\n\ M\u00E9todo\ que\ testa\ se\ um\ objeto\ \u00E9\ igual\ a\ uma\ determinada\ identifica\u00E7\u00E3o\r\n\ @param\ \ \ \ \ \ objeto\ a\ ser\ testado\r\n\ @return\ \ \ \ \ true\ se\ o\ objeto\ for\ igual\ \u00E0\ identifica\u00E7\u00E3o,\ false\ se\ o\ objeto\ passado\ n\u00E3o\ for\ igual\ \u00E0\ identifica\u00E7\u00E3o\r\n
comment21.params=r
comment21.target=int\ compareTo(Ride)
comment21.text=\r\n\ M\u00E9todo\ que\ implementa\ um\ comparador\ de\ Ride\ atrav\u00E9s\ das\ datas\r\n\ @param\ Ride\ r\ \r\n
comment3.params=r
comment3.target=Ride(Ride)
comment3.text=Construtor\ de\ c\u00F3pia\ que\ cria\ uma\ nova\ inst\u00E2ncia\ Ride\ a\ partir\ de\ uma\ Ride\ passado\ como\ par\u00E2metro\ *
comment4.params=
comment4.target=java.lang.String\ getClEmail()
comment4.text=\r\n\ M\u00E9todo\ que\ devolve\ o\ email\ de\ um\ cliente\r\n\ @return\ Email\ do\ cliente\r\n
comment5.params=
comment5.target=java.time.LocalDateTime\ getDate()
comment5.text=\r\n\ M\u00E9todo\ que\ devolve\ a\ data\ da\ viagem\r\n\ @return\ Data\ da\ viagem\r\n
comment6.params=
comment6.target=Point2D\ getStart()
comment6.text=\r\n\ M\u00E9todo\ que\ devolve\ a\ localiza\u00E7\u00E3o\ do\ inicio\ da\ viagem\r\n\ @return\ Localiza\u00E7\u00E3o\ do\ inicio\ da\ viagem\r\n
comment7.params=
comment7.target=Point2D\ getDestination()
comment7.text=\r\n\ M\u00E9todo\ que\ devolve\ a\ localiza\u00E7\u00E3o\ do\ destino\ da\ viagem\r\n\ @return\ Localiza\u00E7\u00E3o\ do\ destino\ da\ viagem\r\n
comment8.params=
comment8.target=double\ getKms()
comment8.text=\r\n\ M\u00E9todo\ que\ devolve\ o\ numero\ de\ kms\ percorridos\ na\ viagem\r\n\ @return\ Numero\ de\ kms\ percorridos\ na\ viagem\r\n
comment9.params=
comment9.target=double\ getRealPrice()
comment9.text=\r\n\ M\u00E9todo\ que\ devolve\ o\ pre\u00E7o\ real\ da\ viagem\r\n\ @return\ Pre\u00E7o\ real\ da\ viagem\r\n
numComments=22
