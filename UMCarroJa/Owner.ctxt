#BlueJ class context
comment0.target=Owner
comment0.text=\r\n\ Representa\u00E7\u00E3o\ da\ classe\ propiet\u00E1rio,\ subclasse\ de\ USER\r\n
comment1.params=
comment1.target=Owner()
comment1.text=Construtor\ vazio\ que\ cria\ uma\ inst\u00E2ncia\ Owner\ \ *
comment10.params=h
comment10.target=void\ addSetRentedCar(java.util.Set)
comment11.params=ve
comment11.target=void\ setVehicles(java.util.Map)
comment12.params=v
comment12.target=void\ addVehicle(Vehicle)
comment13.params=v
comment13.target=void\ removeVehicle(Vehicle)
comment14.params=
comment14.target=Owner\ clone()
comment14.text=CLONE\ ************************
comment15.params=o
comment15.target=boolean\ equals(java.lang.Object)
comment15.text=EQUALS\ *******************
comment16.params=
comment16.target=java.lang.String\ toString()
comment16.text=TOSTRING\ ************************
comment17.params=v\ av
comment17.target=void\ changeVhAvailability(Vehicle,\ boolean)
comment17.text=\r\n\ M\u00E9todo\ que\ altera\ a\ disponibilidade\ do\ ve\u00EDculo\r\n\ @param\ Ve\u00EDculo\ a\ alterar\r\n\ @param\ Disponibilidade\ atual\ do\ ve\u00EDculo\ \r\n
comment18.params=v\ p
comment18.target=void\ changePriceKM(Vehicle,\ double)
comment18.text=\r\n\ M\u00E9todo\ que\ altera\ o\ pre\u00E7o\ do\ ve\u00EDculo\r\n\ @param\ Ve\u00EDculo\ a\ alterar\r\n\ @param\ Novo\ pre\u00E7o\ \r\n
comment19.params=plate
comment19.target=void\ refuel(java.lang.String)
comment19.text=\r\n\ M\u00E9todo\ que\ permite\ o\ propriet\u00E1rio\ abastecer\ o\ ve\u00EDculo\r\n\ @param\ Matricula\ do\ ve\u00EDculo\r\n
comment2.params=name\ nif\ email\ address
comment2.target=Owner(java.lang.String,\ int,\ java.lang.String,\ java.lang.String)
comment2.text=Construtor\ que\ cria\ um\ novo\ Owner\ a\ partir\ dos\ par\u00E2metros\ dados\ *
comment20.params=
comment20.target=void\ ownerRating()
comment20.text=\r\n\ M\u00E9todo\ que\ calcula\ a\ classifica\u00E7\u00E3o\ de\ um\ propriet\u00E1rio\ \r\n
comment3.params=o
comment3.target=Owner(Owner)
comment3.text=Construtor\ de\ c\u00F3pia\ que\ cria\ uma\ nova\ inst\u00E2ncia\ Owner\ a\ partir\ de\ um\ Owner\ passado\ como\ par\u00E2metro\ *
comment4.params=
comment4.target=java.util.Set\ getRentingHistoryAll()
comment4.text=GETTERS\ ************************
comment5.params=
comment5.target=java.util.Map\ getVehicles()
comment6.params=newR
comment6.target=void\ setRating(int)
comment6.text=SETTERS\ ************************
comment7.params=rc
comment7.target=void\ setRentingHistory(java.util.Set)
comment8.params=r
comment8.target=void\ addRentedCar(RentedCar)
comment9.params=r
comment9.target=void\ removeRentedCar(RentedCar)
numComments=21
