#BlueJ class context
comment0.target=Owner
comment0.text=\n\ Representa\u00E7\u00E3o\ da\ classe\ propiet\u00E1rio,\ subclasse\ de\ USER\n
comment1.params=
comment1.target=Owner()
comment1.text=\ \n\ Construtor\ vazio\ que\ cria\ uma\ inst\u00E2ncia\ Owner\ \n
comment10.params=ve
comment10.target=void\ setVehicles(java.util.Map)
comment10.text=\n\ M\u00E9todo\ que\ define\ os\ ve\u00EDculos\ de\ um\ propriet\u00E1rio\n\ @param\ Ve\u00EDculos\ de\ um\ propriet\u00E1rio\n
comment11.params=v
comment11.target=void\ addVehicle(Vehicle)
comment11.text=\n\ M\u00E9todo\ que\ adiciona\ um\ ve\u00EDculo\ \u00E0\ lista\ de\ ve\u00EDculos\ do\ cliente\n\ @param\ Ve\u00EDculo\ \n
comment12.params=v
comment12.target=void\ removeVehicle(Vehicle)
comment12.text=\n\ M\u00E9todo\ que\ remove\ um\ ve\u00EDculo\ \u00E0\ lista\ de\ ve\u00EDculos\ do\ cliente\n\ @param\ Ve\u00EDculo\ \n
comment13.params=
comment13.target=Owner\ clone()
comment13.text=\ \n\ M\u00E9todo\ que\ cria\ uma\ c\u00F3pia\ de\ uma\ identifica\u00E7\u00E3o\ de\ um\ Owner\n
comment14.params=o
comment14.target=boolean\ equals(java.lang.Object)
comment14.text=\ \n\ M\u00E9todo\ que\ testa\ se\ um\ objeto\ \u00E9\ igual\ a\ uma\ determinada\ identifica\u00E7\u00E3o\n\ @param\ \ \ \ \ \ Objeto\ a\ ser\ testado\n\ @return\ \ \ \ \ True\ se\ o\ objeto\ for\ igual\ \u00E0\ identifica\u00E7\u00E3o,\ false\ se\ o\ objeto\ passado\ n\u00E3o\ for\ igual\ \u00E0\ identifica\u00E7\u00E3o\n
comment15.params=
comment15.target=java.lang.String\ toString()
comment15.text=\n\ M\u00E9todo\ que\ converte\ uma\ identifica\u00E7\u00E3o\ numa\ string\n\ @return\ \ string\ com\ a\ identifica\u00E7\u00E3o\ do\ utilizador\n
comment16.params=v\ av
comment16.target=void\ changeVhAvailability(Vehicle,\ boolean)
comment16.text=\n\ M\u00E9todo\ que\ altera\ a\ disponibilidade\ do\ ve\u00EDculo\n\ @param\ \ \ Ve\u00EDculo\ a\ alterar\n\ @param\ \ \ Disponibilidade\ atual\ do\ ve\u00EDculo\ \n
comment17.params=v\ p
comment17.target=void\ changePriceKM(Vehicle,\ double)
comment17.text=\n\ M\u00E9todo\ que\ altera\ o\ pre\u00E7o\ do\ ve\u00EDculo\n\ @param\ \ \ Ve\u00EDculo\ a\ alterar\n\ @param\ \ \ Novo\ pre\u00E7o\ do\ ve\u00EDculo\n
comment18.params=plate
comment18.target=void\ refuel(java.lang.String)
comment18.text=\n\ M\u00E9todo\ que\ permite\ o\ propriet\u00E1rio\ abastecer\ o\ ve\u00EDculo\n\ @param\ Matricula\ do\ ve\u00EDculo\n
comment19.params=newR
comment19.target=void\ ownerRating(int)
comment19.text=\n\ M\u00E9todo\ que\ calcula\ a\ classifica\u00E7\u00E3o\ de\ um\ propriet\u00E1rio\ \n
comment2.params=name\ nif\ email\ address
comment2.target=Owner(java.lang.String,\ int,\ java.lang.String,\ java.lang.String)
comment2.text=\ \n\ Construtor\ que\ cria\ um\ novo\ Owner\ a\ partir\ dos\ par\u00E2metros\ dados\ \n
comment3.params=o
comment3.target=Owner(Owner)
comment3.text=\ \n\ Construtor\ de\ c\u00F3pia\ que\ cria\ uma\ nova\ inst\u00E2ncia\ Owner\ a\ partir\ de\ um\ Owner\ passado\ como\ par\u00E2metro\ \n
comment4.params=
comment4.target=java.util.Set\ getRentingHistoryAll()
comment4.text=\n\ M\u00E9todo\ que\ devolve\ o\ historico\ de\ um\ propriet\u00E1rio\n\ @returns\ Historico\ de\ um\ propriet\u00E1rio\n
comment5.params=
comment5.target=java.util.Map\ getVehicles()
comment5.text=\n\ M\u00E9todo\ que\ devolve\ todos\ os\ ve\u00EDculos\ de\ um\ propriet\u00E1rio\n\ @returns\ Todos\ os\ ve\u00EDculos\ de\ um\ propriet\u00E1rio\n
comment6.params=rc
comment6.target=void\ setRentingHistory(java.util.Set)
comment6.text=\n\ M\u00E9todo\ que\ devolve\ todos\ os\ ve\u00EDculos\ de\ um\ propriet\u00E1rio\n\ @param\ Todos\ os\ ve\u00EDculos\ de\ um\ propriet\u00E1rio\n
comment7.params=r
comment7.target=void\ addRentedCar(RentedCar)
comment7.text=\n\ M\u00E9todo\ que\ adiciona\ um\ aluguer\ ao\ historico\n\ @param\ Aluguer\ realizado\ \n
comment8.params=r
comment8.target=void\ removeRentedCar(RentedCar)
comment8.text=\n\ M\u00E9todo\ que\ remove\ um\ aluguer\ ao\ historico\n\ @param\ Aluguer\ realizado\ \n
comment9.params=h
comment9.target=void\ addSetRentedCar(java.util.Set)
comment9.text=\n\ M\u00E9todo\ que\ adiciona\ um\ \ conjunto\ de\ alugueres\ ao\ historico\n\ @param\ Aluguer\ realizado\n
numComments=20
